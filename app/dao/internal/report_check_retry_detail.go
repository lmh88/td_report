// ==========================================================================
// This is auto-generated by gf cli tool. DO NOT EDIT THIS FILE MANUALLY.
// ==========================================================================

package internal

import (
	"github.com/gogf/gf/database/gdb"
	"github.com/gogf/gf/frame/g"
	"github.com/gogf/gf/frame/gmvc"
)

// ReportCheckRetryDetailDao is the manager for logic model data accessing
// and custom defined data operations functions management.
type ReportCheckRetryDetailDao struct {
	gmvc.M                                // M is the core and embedded struct that inherits all chaining operations from gdb.Model.
	DB      gdb.DB                        // DB is the raw underlying database management object.
	Table   string                        // Table is the table name of the DAO.
	Columns reportCheckRetryDetailColumns // Columns contains all the columns of Table that for convenient usage.
}

// ReportCheckRetryDetailColumns defines and stores column names for table report_check_retry_detail.
type reportCheckRetryDetailColumns struct {
	Id           string //
	ReportType   string //
	ReportName   string //
	ReportDate   string //
	ProfileId    string //
	RetryType    string // 1 文件为空 2 文件没更新 0 默认
	CreateDate   string //
	UpdateDate   string //
	CheckTime    string // 检测次数
	Extrant      string // 针对sd的t200 或者t300等类别
	ErrorsReason string // 错误情况，针对检测程序发现重拾次数太多后拉取部分记录错误情况
}

var (
	// ReportCheckRetryDetail is globally public accessible object for table report_check_retry_detail operations.
	ReportCheckRetryDetail = ReportCheckRetryDetailDao{
		M:     g.DB("report").Model("report_check_retry_detail").Safe(),
		DB:    g.DB("report"),
		Table: "report_check_retry_detail",
		Columns: reportCheckRetryDetailColumns{
			Id:           "id",
			ReportType:   "report_type",
			ReportName:   "report_name",
			ReportDate:   "report_date",
			ProfileId:    "profile_id",
			RetryType:    "retry_type",
			CreateDate:   "create_date",
			UpdateDate:   "update_date",
			CheckTime:    "check_time",
			Extrant:      "extrant",
			ErrorsReason: "errors_reason",
		},
	}
)
