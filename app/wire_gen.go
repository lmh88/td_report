// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package app

import (
	"td_report/app/repo"
	"td_report/app/service/amazon"
	"td_report/app/service/common"
	"td_report/app/service/report"
	"td_report/app/service/tool"
)

// Injectors from wire.go:

//初始化权限server
func InitializeAuthService() *common.AuthService {
	sellerProfileRepository := repo.NewSellerProfileRepository()
	sellerTokenRepository := repo.NewSellerTokenRepository()
	profileRepository := repo.NewProfileRepository()
	authService := &common.AuthService{
		SellerProfileRepo: sellerProfileRepository,
		SellerTokenRepo:   sellerTokenRepository,
		ProfileRepo:       profileRepository,
	}
	return authService
}

// 初始化报表任务服务
func InitializeReportTaskService() *common.ReportTaskService {
	reportTaskRepository := repo.NewReportTaskRepository()
	reportTaskService := &common.ReportTaskService{
		ReportTaskRepos: reportTaskRepository,
	}
	return reportTaskService
}

//  获取profile
func InitializeProfileService() *amazon.ProfileService {
	profileRepository := repo.NewProfileRepository()
	sellerProfileRepository := repo.NewSellerProfileRepository()
	profileService := &amazon.ProfileService{
		ProfileRepository:       profileRepository,
		SellerProfileRepository: sellerProfileRepository,
	}
	return profileService
}

//初始化统计工具服务
func InitializeStatisticsService() *tool.StatisticsService {
	sellerProfileRepository := repo.NewSellerProfileRepository()
	profileRepository := repo.NewProfileRepository()
	reportSdCheckRepository := repo.NewReportSdCheckRepository()
	reportSpCheckRepository := repo.NewReportSpCheckRepository()
	reportSbCheckRepository := repo.NewReportSbCheckRepository()
	reportDspCheckRepository := repo.NewReportDspCheckRepository()
	statisticsService := &tool.StatisticsService{
		SellerProfileRepository:  sellerProfileRepository,
		ProfileRepository:        profileRepository,
		ReportSdCheckRepository:  reportSdCheckRepository,
		ReportSpCheckRepository:  reportSpCheckRepository,
		ReportSbCheckRepository:  reportSbCheckRepository,
		ReportDspCheckRepository: reportDspCheckRepository,
	}
	return statisticsService
}

//初始化队列报表调度服务
func InitializeAllReportService() *report.AllReportService {
	sellerProfileRepository := repo.NewSellerProfileRepository()
	profileRepository := repo.NewProfileRepository()
	reportTaskRepository := repo.NewReportTaskRepository()
	allReportService := &report.AllReportService{
		SellerProfileRepository: sellerProfileRepository,
		ProfileRepository:       profileRepository,
		ReportTaskRepository:    reportTaskRepository,
	}
	return allReportService
}

// web入口授权等服务
func InitializeToolReportService() *report.ToolReportService {
	sellerProfileRepository := repo.NewSellerProfileRepository()
	profileRepository := repo.NewProfileRepository()
	reportTaskRepository := repo.NewReportTaskRepository()
	reportBatchRepository := repo.NewReportBatchRepository()
	reportBatchDetailRepository := repo.NewReportBatchDetailRepository()
	toolReportService := &report.ToolReportService{
		SellerProfileRepository:     sellerProfileRepository,
		ProfileRepository:           profileRepository,
		ReportTaskRepository:        reportTaskRepository,
		ReportBatchRepository:       reportBatchRepository,
		ReportBatchDetailRepository: reportBatchDetailRepository,
	}
	return toolReportService
}

//新客户授权
func InitializeCustomerReportService() *report.CustomerReportService {
	sellerProfileRepository := repo.NewSellerProfileRepository()
	profileRepository := repo.NewProfileRepository()
	reportTaskRepository := repo.NewReportTaskRepository()
	reportBatchRepository := repo.NewReportBatchRepository()
	reportBatchDetailRepository := repo.NewReportBatchDetailRepository()
	customerReportService := &report.CustomerReportService{
		SellerProfileRepository:     sellerProfileRepository,
		ProfileRepository:           profileRepository,
		ReportTaskRepository:        reportTaskRepository,
		ReportBatchRepository:       reportBatchRepository,
		ReportBatchDetailRepository: reportBatchDetailRepository,
	}
	return customerReportService
}

func InitializeFeadService() *report.FeadService {
	sellerProfileRepository := repo.NewSellerProfileRepository()
	spConversionRepository := repo.NewSpConversionRepository()
	spTrafficRepository := repo.NewSpTrafficRepository()
	feadRepository := repo.NewFeadRepository()
	feadService := &report.FeadService{
		SellerProfileRepository: sellerProfileRepository,
		SpConversionRepository:  spConversionRepository,
		SpTrafficRepository:     spTrafficRepository,
		FeadRepository:          feadRepository,
	}
	return feadService
}
